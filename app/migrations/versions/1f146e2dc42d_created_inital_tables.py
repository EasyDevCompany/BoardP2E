"""created inital tables

Revision ID: 1f146e2dc42d
Revises: 
Create Date: 2022-12-10 22:54:04.044829

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from app.utils.bytes_field import HexByteString

# revision identifiers, used by Alembic.
revision = '1f146e2dc42d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=50), nullable=True),
    sa.Column('text', sa.String(length=2000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    op.create_table('game',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name_eng', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('description_eng', sa.String(), nullable=True),
    sa.Column('description_ru', sa.String(), nullable=True),
    sa.Column('view_amount', sa.BigInteger(), nullable=True),
    sa.Column('image_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_id'), 'game', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('login', sa.String(length=15), nullable=False),
    sa.Column('status', sa.Enum('user', 'moderator', 'admin', name='userstatus'), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('balance', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('password', HexByteString, nullable=True),
    sa.Column('salt', HexByteString, nullable=True),
    sa.Column('raiting', sa.Float(precision=1), nullable=True),
    sa.Column('review_amount', sa.Integer(), nullable=True),
    sa.Column('image_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('category',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name_of_currency_eng', sa.String(), nullable=False),
    sa.Column('game_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id', 'game_id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_table('order',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('amount_of_selling_item', sa.BigInteger(), nullable=True),
    sa.Column('price_for_one_currency', sa.BigInteger(), nullable=True),
    sa.Column('view_amount', sa.BigInteger(), nullable=True),
    sa.Column('server_eng', sa.String(), nullable=True),
    sa.Column('side_eng', sa.String(), nullable=True),
    sa.Column('description_eng', sa.String(), nullable=True),
    sa.Column('name_of_currency_ru', sa.String(), nullable=True),
    sa.Column('server_ru', sa.String(), nullable=True),
    sa.Column('side_ru', sa.String(), nullable=True),
    sa.Column('description_ru', sa.String(), nullable=True),
    sa.Column('author_of_deal_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status', sa.Enum('active', 'archived', 'draft', 'deleted', name='orderstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_of_deal_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_author_of_deal_id'), 'order', ['author_of_deal_id'], unique=False)
    op.create_index(op.f('ix_order_id'), 'order', ['id'], unique=False)
    op.create_table('user_token',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id')
    )
    op.create_index(op.f('ix_user_token_id'), 'user_token', ['id'], unique=False)
    op.create_table('deal',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('count_of_money', sa.Integer(), nullable=True),
    sa.Column('currency_count', sa.BigInteger(), nullable=True),
    sa.Column('status', sa.Enum('created_waiting_to_transfer', 'waiting_for_transfer_confirmation', 'confirmed', 'cancelled', 'controversial_situation', 'decided_in_favor_of_the_buyer', 'decided_in_favor_of_the_seller', name='dealstatus'), nullable=True),
    sa.Column('buyer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('seller_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deal_id'), 'deal', ['id'], unique=False)
    op.create_table('subfield_order',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('order_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subfield_order_id'), 'subfield_order', ['id'], unique=False)
    op.create_index(op.f('ix_subfield_order_order_id'), 'subfield_order', ['order_id'], unique=False)
    op.create_table('review',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('text', sa.String(length=500), nullable=True),
    sa.Column('publication_date', sa.DateTime(), nullable=True),
    sa.Column('raiting', sa.Float(precision=1), nullable=True),
    sa.Column('author_of_review_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('reviewed_user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deal_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['author_of_review_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['deal_id'], ['deal.id'], ),
    sa.ForeignKeyConstraint(['reviewed_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_id'), 'review', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_review_id'), table_name='review')
    op.drop_table('review')
    op.drop_index(op.f('ix_subfield_order_order_id'), table_name='subfield_order')
    op.drop_index(op.f('ix_subfield_order_id'), table_name='subfield_order')
    op.drop_table('subfield_order')
    op.drop_index(op.f('ix_deal_id'), table_name='deal')
    op.drop_table('deal')
    op.drop_index(op.f('ix_user_token_id'), table_name='user_token')
    op.drop_table('user_token')
    op.drop_index(op.f('ix_order_id'), table_name='order')
    op.drop_index(op.f('ix_order_author_of_deal_id'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_game_id'), table_name='game')
    op.drop_table('game')
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.drop_table('feedback')
    # ### end Alembic commands ###
